// Generated by CoffeeScript 1.6.2
(function() {
  var doAnimate, doDataGrab, height, lastTen, lastTime, oldLastTen, path, projection, stateData, states, svg, width;

  width = 960;

  height = 500;

  projection = d3.geo.albersUsa().scale(1000).translate([width / 2, height / 2]);

  path = d3.geo.path().projection(projection);

  svg = d3.select("body").append("svg").style("display", "none").attr("width", width).attr("height", height);

  states = null;

  d3.json("/topo-states.json", function(error, us) {
    console.log(topojson.feature(us, us.objects["states"]).features.map(function(f) {
      return f.properties.name;
    }));
    svg.selectAll(".county").data(topojson.feature(us, us.objects["states"]).features).enter().append("path").attr("class", "county").attr("statename", function(s) {
      return s.properties.name.toLowerCase();
    }).attr("d", path);
    states = map.addShapes(svg.selectAll(".county"));
    svg.remove();
    console.log(states);
    return doDataGrab();
  });

  oldLastTen = [];

  lastTen = [];

  stateData = null;

  doDataGrab = function() {
    return d3.json("/data/data.json", function(error, data) {
      var state, stateName, totals, _ref, _results;

      lastTen = oldLastTen.concat(data.lastTenSecs);
      oldLastTen = data.lastTenSecs;
      setTimeout(doDataGrab, 1000 * 10);
      if (stateData === null) {
        console.log("newdata", data.stateTotals);
        _ref = data.stateTotals;
        _results = [];
        for (state in _ref) {
          totals = _ref[state];
          stateName = state.toLowerCase();
          if (stateName === "colorado") {
            console.log(totals.broncos, totals.seahawks, totals.broncos / (totals.broncos + totals.seahawks));
          }
          console.log(stateName);
          if (!totals.broncos) {
            _results.push(states[stateName].setColorProgression(1));
          } else if (!totals.seahawks) {
            _results.push(states[stateName].setColorProgression(0));
          } else {
            _results.push(states[stateName].setColorProgression(totals.seahawks / (totals.broncos + totals.seahawks)));
          }
        }
        return _results;
      }
    });
  };

  lastTime = Date.now() - 10 * 1000;

  doAnimate = function() {
    var newTweets, targetState, timeToCheck, tweet, _i, _len, _results;

    timeToCheck = Date.now() - 10 * 1000;
    newTweets = lastTen.filter(function(t) {
      return t.saved_at > lastTime && t.saved_at < timeToCheck;
    });
    lastTime = timeToCheck;
    setTimeout(doAnimate, 100);
    _results = [];
    for (_i = 0, _len = newTweets.length; _i < _len; _i++) {
      tweet = newTweets[_i];
      targetState = tweet.state.toLowerCase();
      _results.push(states[targetState].raiseUp());
    }
    return _results;
  };

  doAnimate();

}).call(this);
