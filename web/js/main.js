// Generated by CoffeeScript 1.6.2
(function() {
  var doAnimate, doDataGrab, doSvgDraw, hasWebGL, height, lastTen, lastTime, maxTweets, oldLastTen, path, projection, setStateDisplay, stateData, states, svg, svgholder, width;

  svgholder = document.getElementsByClassName("svgholder")[0];

  hasWebGL = document.createElement("canvas").getContext("webgl") !== null;

  width = svgholder.clientWidth;

  height = svgholder.clientWidth * 0.6;

  if (hasWebGL) {
    width = 960;
    height = 500;
  }

  projection = d3.geo.albersUsa().scale(!hasWebGL ? 1000 / (760 / width) : 1000).translate([width / 2, height / 2]);

  path = d3.geo.path().projection(projection);

  svg = d3.select(".svgholder").append("svg").style("-webkit-transform", "rotate3d(-1,1,0,-30deg)").attr("width", width).attr("height", height);

  $(window).on("resize", function() {
    if (!hasWebGL) {
      return window.location.reload();
    }
  });

  states = null;

  doSvgDraw = function() {
    svg.selectAll(".county").data(map.stateShapes).enter().append("path").attr("class", "county").attr("statename", function(s) {
      return s.properties.STATE_NAME.toLowerCase();
    }).attr("d", path);
    if (hasWebGL) {
      map.create3DView(svg.selectAll(".county"));
      return svg.remove();
    } else {
      return map.create2DView(svg.selectAll(".county"));
    }
  };

  d3.json("/topo-states.json", function(error, us) {
    map.stateShapes = topojson.feature(us, us.objects["usa_state_shapefile"]).features;
    doSvgDraw();
    return doDataGrab();
  });

  oldLastTen = [];

  lastTen = [];

  stateData = null;

  maxTweets = null;

  setStateDisplay = function() {
    var brBar, data, h3, ident, key, li, lis, shBar, state, stateArray, _i, _len;

    stateArray = [];
    for (key in stateData) {
      data = stateData[key];
      stateArray.push({
        name: key,
        broncos: data.broncos,
        seahawks: data.seahawks
      });
    }
    stateArray.sort(function(a, b) {
      return (b.broncos + b.seahawks) - (a.broncos + a.seahawks);
    });
    maxTweets = stateArray[0].broncos;
    if (stateArray[0].seahawks > maxTweets) {
      maxTweets = stateArray[0].seahawks;
    }
    lis = [];
    for (_i = 0, _len = stateArray.length; _i < _len; _i++) {
      state = stateArray[_i];
      li = $("<li>");
      h3 = $("<h3>").html(state.name);
      ident = state.name.toLowerCase().replace(/\s/g, "_");
      shBar = $("<div class='bar seahawks " + ident + "'/>");
      shBar.css("width", Math.round(state.seahawks / maxTweets * 100) + "%");
      brBar = $("<div class='bar broncos'/>");
      brBar.css("width", Math.round(state.broncos / maxTweets * 100) + "%");
      li.append(h3, shBar, brBar);
      lis.push(li);
    }
    return $("#statesdisplay").empty().append(lis);
  };

  doDataGrab = function() {
    return d3.json("/data/data.json", function(error, data) {
      var state, stateName, totals, _ref;

      lastTen = oldLastTen.concat(data.lastTenSecs);
      oldLastTen = data.lastTenSecs;
      setTimeout(doDataGrab, 1000 * 10);
      if (stateData === null) {
        console.log("newdata", data.stateTotals);
        _ref = data.stateTotals;
        for (state in _ref) {
          totals = _ref[state];
          stateName = state.toLowerCase();
          if (stateName === "colorado") {
            console.log(totals.broncos, totals.seahawks, totals.broncos / (totals.broncos + totals.seahawks));
          }
          if (!totals.broncos) {
            map.states[stateName].setColorProgression(1);
          } else if (!totals.seahawks) {
            map.states[stateName].setColorProgression(0);
          } else {
            map.states[stateName].setColorProgression(totals.seahawks / (totals.broncos + totals.seahawks));
          }
        }
        stateData = data.stateTotals;
        console.log(stateData);
        return setStateDisplay();
      }
    });
  };

  lastTime = Date.now() - 10 * 1000;

  doAnimate = function() {
    var ident, newTweets, targetState, timeToCheck, tweet, _i, _len, _results;

    timeToCheck = Date.now() - 10 * 1000;
    newTweets = lastTen.filter(function(t) {
      return t.saved_at > lastTime && t.saved_at < timeToCheck;
    });
    lastTime = timeToCheck;
    setTimeout(doAnimate, 100);
    _results = [];
    for (_i = 0, _len = newTweets.length; _i < _len; _i++) {
      tweet = newTweets[_i];
      targetState = tweet.state.toLowerCase();
      map.states[targetState].raiseUp();
      if (tweet.keyword) {
        stateData[tweet.state][tweet.keyword]++;
        if (stateData[tweet.state][tweet.keyword] > maxTweets) {
          setStateDisplay();
        } else {
          ident = targetState.replace(/\s/g, "_");
          $("." + ident + "." + tweet.keyword).css("width", Math.round(state[keyword] / maxTweets * 100) + "%");
        }
        _results.push(console.log("upped " + tweet.keyword + " in " + tweet.state));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  doAnimate();

  $("#tweetBroncos").on("click", function() {
    return map.sendTweet("Broncos");
  });

  $("#tweetBroncos").on("click", function() {
    return map.sendTweet("Seahawks");
  });

}).call(this);
